{"version":3,"sources":["features/auth/login/ui/Login.module.css","features/packs/ui/Packs.module.css","features/cards/ui/Cards.module.css","main/ui/common/c1-SuperInputText/SuperInputText.module.css","main/ui/Header/Header.module.css","main/ui/Header/error404/Error404.module.css","main/ui/common/c2-SuperButton/SuperButton.module.css","main/ui/common/c4-Paginator/Paginator.module.css","main/ui/common/c6-Modal/Modal/Modal.module.css","main/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","features/auth/registration/ui/Registration.module.css","main/ui/Routes.module.css","features/test/ui/Test.module.css","main/ui/common/c5-Search/Search.module.css","features/packs/pack/Pack.module.css","features/cards/ui/Card/Card.module.css","main/ui/Header/Navbar/Navbar.module.css","main/ui/Header/error404/Error404.tsx","features/profile/ui/Profile.tsx","main/dal/instance.ts","features/new-password/dal/api-password.tsx","features/reset-password/bll/reset-password-reducer.ts","main/ui/common/c2-SuperButton/SuperButton.tsx","features/reset-password/ui/ResetPassword.tsx","features/new-password/bll/new-password-reducer.ts","features/new-password/ui/NewPassword.tsx","main/ui/common/c1-SuperInputText/SuperInputText.tsx","main/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","features/test/ui/Test.tsx","features/packs/dal/packs-api.ts","features/packs/bll/packs-reducer.ts","main/ui/common/c5-Search/Search.tsx","main/ui/common/c4-Paginator/Paginator.tsx","features/packs/pack/Pack.tsx","features/packs/ui/Packs.tsx","features/cards/dal/cards-api.ts","features/cards/bll/cards-reducer.ts","features/cards/ui/Card/Card.tsx","features/cards/ui/Cards.tsx","features/auth/login/ui/Login.tsx","features/auth/login/dal/login-api.ts","features/auth/login/bll/auth-reducer.ts","features/auth/login/ui/LoginContainer.tsx","features/auth/registration/dal/registration-api.ts","features/auth/registration/bll/registration-reducer.ts","features/auth/registration/ui/Registration.tsx","features/auth/registration/ui/RegistrationContainer.tsx","features/learning/LearnCard/LearnCard.tsx","features/learning/ui/LearnPage.tsx","main/ui/common/c6-Modal/Modal/Modal.tsx","main/ui/common/c6-Modal/ModalContainer.tsx","main/ui/common/c6-Modal/ModalContainerWithInput.tsx","main/ui/common/c6-Modal/Modal/ModalUp.tsx","main/ui/common/c6-Modal/ModalsPage.tsx","main/ui/Routes.tsx","features/auth/login/ui/logaut/Logout.tsx","main/ui/Header/Navbar/Navbar.tsx","main/ui/Header/Header.tsx","main/ui/App.tsx","reportWebVitals.ts","features/profile/bll/profile-reducer.ts","features/test/bll/test-reducer.ts","main/bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","classes","messageContainer","mainImage","src","alt","errorText","Profile","instance","axios","create","withCredentials","baseURL","passwordAPI","email","post","from","message","then","res","data","password","resetPasswordToken","response","initialState","SuperButton","red","restProps","finalClassName","s","buttonStyle","default","ResetPassword","props","useState","newPassword","setNewPassword","repeatNewPassword","setRepeatNewPassword","dispatch","useDispatch","token","useParams","isNewPassword","useSelector","state","resetPassword","tokenName","to","PATH","LOGIN","formContainer","type","onChange","e","currentTarget","value","onClick","catch","console","log","error","setNewPasswordTC","alert","text","NewPassword","isForgot","isRecoveryPassword","setIsRecoveryPassword","RESET_PASSWORD","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","placeholder","finalSpanClassName","finalInputClassName","input","errorInput","superInput","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","Test","styles","container","packsAPI","packsParams","get","params","cardsPack","name","_id","put","id","delete","packsList","packName","min","max","sortPacks","page","pageCount","cardPacksTotalCount","fetchPacksTC","cardPacks","Search","inputValue","setInputValue","style","searchContainer","setFilteredResults","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionsCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginationContainer","filter","p","map","pageNumber","Pack","pack","packItem","cardsCount","updated","updatePack","deletePack","CARDS","LEARNING","Packs","packs","useEffect","updatePackTC","deletePackTC","packsContainer","filtersContainer","SetPacksSearchTermAC","setPageAC","tableContainer","tableHeaders","addPackTC","addButton","cardsAPI","cardsParams","card","question","comments","cardsList","minGrade","maxGrade","cardsTotalCount","cardAnswer","cardQuestion","cardsPack_id","sortCards","setCardsErrorAC","fetchCardsTC","cards","Card","cardContainer","answer","grade","updateCard","deleteCard","Cards","setPackIdAC","updateCardTC","deleteCardTC","cardsContainer","paginator","setCardsPageAC","addCardTC","rating","shots","user_id","created","_v","c","packId","Login","onChangeHandlerEmail","onChangeHandlerPassword","onChangeHandlerRememberMe","onClickHandler","loginAPI","rememberMe","user","isLogin","setLoginAC","payload","setError","LoginContainer","setEmail","setPassword","setRememberMe","login","useCallback","PROFILE","REGISTRATION","registrationAPI","isRegistered","Registration","onEmailChange","onPasswordChange","registerUser","RegistrationContainer","registration","getState","SetErrorAC","RegisterUserTC","LearnCard","setIsChecked","LearningPage","Modal","isShown","height","width","showBackground","closeModalWindow","scrollUp","top","left","position","modal","overlay","ModalContainer","setIsShown","ModalContainerWithInput","ModalUp","toggleIsShown","window","pageYOffset","addEventListener","scrollTo","behavior","cursor","ModalsPage","marginTop","NEW_PASSWORD","TEST","PACKS","MODALS","Routes","mainContainer","path","exact","render","Logout","info","Navbar","onClickItem","setCollapsed","isCollapsed","hidden","menuContainer","menuItem","activeClassName","highlight","Header","navbarContainer","menuIcon","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","test","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bc9bc7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Login_formContainer__l6Sc5\",\"error\":\"Login_error__1qOce\",\"text\":\"Login_text__1ezFN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsContainer\":\"Packs_packsContainer__16oNN\",\"filtersContainer\":\"Packs_filtersContainer__3B5zs\",\"tableHeaders\":\"Packs_tableHeaders__2SXmM\",\"addButton\":\"Packs_addButton__Z7p1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"Cards_cardsContainer__JoXOV\",\"filtersContainer\":\"Cards_filtersContainer__2FGvO\",\"tableHeaders\":\"Cards_tableHeaders__MwYNV\",\"paginator\":\"Cards_paginator__MpeFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__awbh6\",\"superInput\":\"SuperInputText_superInput__5NKs3\",\"errorInput\":\"SuperInputText_errorInput__2jH9u\",\"error\":\"SuperInputText_error__570P8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"Header_navbarContainer__PJb6n\",\"menuIcon\":\"Header_menuIcon__1nmXt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Error404_messageContainer__3oMS9\",\"mainImage\":\"Error404_mainImage__26ILy\",\"errorText\":\"Error404_errorText__3hRkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonStyle\":\"SuperButton_buttonStyle__1YUs3\",\"default\":\"SuperButton_default__3Ewh5\",\"red\":\"SuperButton_red__6k63U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__dwd8H\",\"currentPage\":\"Paginator_currentPage__3WxEO\",\"paginationContainer\":\"Paginator_paginationContainer__3QLvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__UMjzS\",\"overlay\":\"Modal_overlay__2rgZc\",\"children\":\"Modal_children__3m75A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3RnLF\",\"spanClassName\":\"SuperCheckbox_spanClassName__34fdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Registration_formContainer__2EKGT\",\"error\":\"Registration_error__17O2b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Routes_mainContainer__3q4oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Test_container__3_l_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"Search_searchContainer__3-9Kc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packItem\":\"Pack_packItem__3DyQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Card_cardContainer__1nc8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"Navbar_hidden__1Mlkl\",\"menuContainer\":\"Navbar_menuContainer__wyTKk\",\"highlight\":\"Navbar_highlight__1d_A9\"};","import React from \"react\";\nimport classes from './Error404.module.css'\n\nfunction Error404() {\n    return (\n        <div>\n            <div className={classes.messageContainer}>\n                <img className={classes.mainImage} src=\"https://svgsilh.com/svg/1298794.svg\" alt=\"cat\"/>\n                <div className={classes.errorText}>\n                    <h1>Ooooops...</h1>\n                    <h2>404</h2>\n                    <h3>Page not found :(</h3>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\n\nfunction Profile() {\n    return (\n        <div>\n            Profile\n        </div>\n    );\n}\n\nexport default Profile;\n","import axios from \"axios\";\n\nexport const instance = axios.create({\n    withCredentials: true,\n    // baseURL: 'http://localhost:7542/2.0/'\n    baseURL: 'https://neko-back.herokuapp.com/2.0'\n})\n","import {instance} from \"../../../main/dal/instance\";\n\nexport const passwordAPI = {\n    recoveryPassword(email: string) {\n        return instance.post<{ info: string, error?: string }>('auth/forgot', {\n            email: email,\n            from: 'test-front-admin <olkaaamartynova@gmail.com>',\n            message: `<div style=\"background-color: #00ff00; padding: 15px\">\n                            password recovery link: \n                     <a href='http://localhost:3000/Cards?#/new-password/$token$'>Click</a>\n                     </div>`\n        })\n            .then(res => res.data)\n    },\n    resetPassword(password: string, resetPasswordToken: string) {\n        return instance.post<{ info: string, error?: string }>\n        ('auth/set-new-password', {password, resetPasswordToken})\n            .then(response => response.data)\n    }\n}\n","import {Dispatch} from \"redux\";\nimport {passwordAPI} from \"../../new-password/dal/api-password\";\n\nexport const SET_RESET_PASSWORD = 'SET-RESET-PASSWORD';\n\n\ntype ActionsType = ReturnType<typeof setResetPassword>\ntype ResetPasswordStateType = {\n    isNewPassword: boolean\n}\nconst initialState = {} as ResetPasswordStateType\n\nexport const resetPasswordReducer = (state: ResetPasswordStateType = initialState, action: ActionsType): ResetPasswordStateType => {\n    switch (action.type) {\n        case \"SET-RESET-PASSWORD\":\n            return {\n                ...state,\n                isNewPassword: action.isNewPassword\n            }\n        default:\n            return state;\n    }\n}\nexport const setResetPassword = (isNewPassword: boolean) => ({\n    type: SET_RESET_PASSWORD,\n    isNewPassword\n} as const)\n\nexport const setNewPasswordTC = (password: string, token: string) => (dispatch: Dispatch) => {\n    passwordAPI.resetPassword(password, token)\n        .then(() => {\n            dispatch(setResetPassword(true))\n        })\n        .catch(res => {\n            console.log(res.error)\n        })\n}\n\n\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps\n    }\n) => {\n    const finalClassName = `${s.buttonStyle} ${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}/>\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setNewPasswordTC, setResetPassword} from \"../bll/reset-password-reducer\";\nimport {AppRootStateType} from \"../../../main/bll/store\";\nimport {NavLink, Redirect, RouteComponentProps, useParams} from \"react-router-dom\";\nimport {PATH} from \"../../../main/ui/Routes\";\nimport s from \"../../auth/login/ui/Login.module.css\";\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\n\n/*\ntype PathParamsType = {\n    token: string\n}\ntype PropsType = RouteComponentProps<PathParamsType>\n*/\n\nconst ResetPassword: React.FC = (props) => {\n    const [newPassword, setNewPassword] = useState<string>('')\n    const [repeatNewPassword, setRepeatNewPassword] = useState<string>(\"\")\n    const dispatch = useDispatch()\n    const {token} = useParams<Record<string, string>>();\n    const isNewPassword = useSelector<AppRootStateType, boolean>(state => state.resetPassword.isNewPassword)\n    const tokenName = token ? token : ''\n    const onChangeNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\n        setNewPassword(e.currentTarget.value)\n    }\n    const onChangeRepeatPassword = (e: ChangeEvent<HTMLInputElement>) => {\n        setRepeatNewPassword(e.currentTarget.value)\n    }\n    const onClickNewPassword = () => {\n        if (newPassword === repeatNewPassword) {\n            dispatch(setNewPasswordTC(newPassword, tokenName))\n        } else {\n            alert('Password mismatch')\n        }\n    }\n    if (isNewPassword) {\n        return <Redirect to={PATH.LOGIN}/>}\n    return (\n        <div className={s.formContainer}>\n            <div>Reset Password</div>\n            <form><input type={'password'} onChange={onChangeNewPassword}/>\n                <input type={'password'} onChange={onChangeRepeatPassword}/>\n                <div>\n                    <div><SuperButton onClick={onClickNewPassword}>Send</SuperButton></div>\n                </div>\n            </form>\n            <div>\n                <NavLink className={s.text} to={PATH.LOGIN}>Login</NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default ResetPassword;\n\n","import {passwordAPI} from \"../dal/api-password\";\nimport {Dispatch} from \"redux\";\n\nexport const SET_RECOVERY_PASSWORD = 'SET-RECOVERY-PASSWORD';\n\n\ntype ActionsType = ReturnType<typeof setRecoveryPassword>\ntype NewPasswordStateType = {\n    isForgot: boolean\n}\nconst initialState = {} as NewPasswordStateType\n\nexport const newPasswordReducer = (state: NewPasswordStateType = initialState, action: ActionsType): NewPasswordStateType => {\n    switch (action.type) {\n        case \"SET-RECOVERY-PASSWORD\":\n            return {\n                ...state,\n                isForgot: action.isForgot\n            }\n        default:\n            return state;\n    }\n}\nexport const setRecoveryPassword = (isForgot: boolean) => ({\n    type: SET_RECOVERY_PASSWORD,\n    isForgot\n}as const)\n\nexport const recoveryPasswordTC = (email: string) => (dispatch: Dispatch) => {\n    passwordAPI.recoveryPassword(email)\n        .then(() => {\n            dispatch(setRecoveryPassword(true))\n        })\n        .catch(res => {\n            console.log(res.error)\n        })\n}\n","import React, {ChangeEvent, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {AppRootStateType} from \"../../../main/bll/store\";\nimport {recoveryPasswordTC} from \"../bll/new-password-reducer\";\nimport {PATH} from \"../../../main/ui/Routes\";\nimport s from \"../../auth/login/ui/Login.module.css\";\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\n\nfunction NewPassword() {\n    const isForgot = useSelector<AppRootStateType, boolean>(state => state.newPassword.isForgot)\n    const [isRecoveryPassword, setIsRecoveryPassword] = useState<string>('')\n    const dispatch = useDispatch();\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setIsRecoveryPassword(e.currentTarget.value)\n    }\n    const sendEmail = () => {\n        dispatch(recoveryPasswordTC(isRecoveryPassword))\n    }\n    if (isForgot) {\n        return <Redirect to={PATH.RESET_PASSWORD}/>\n    }\n    return (\n        <div className={s.formContainer}>\n            <form>\n                <span>Email:</span>\n                <div><input type={'email'} onChange={onChangePasswordHandler}/>\n                </div>\n                <div>\n                    <div><SuperButton onClick={sendEmail}>Send</SuperButton></div>\n                </div>\n            </form>\n            <div>\n                <NavLink className={s.text} to={PATH.LOGIN}>Login</NavLink>\n            </div>\n        </div>\n\n    );\n}\n\nexport default NewPassword;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    placeholder?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type,\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName, placeholder,\n\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e);\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\"\n        && onEnter\n        && onEnter();\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput  }`;\n\n    return (\n        <>\n            <input\n                type={type ? type : \"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                placeholder={placeholder}\n\n                {...restProps}\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked2: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type,\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,\n\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps}\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n    );\n}\n\nexport default SuperCheckbox;\n","import React from \"react\";\nimport SuperInputText from \"../../../main/ui/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../../main/ui/common/c3-SuperCheckbox/SuperCheckbox\";\nimport styles from './Test.module.css'\n\nconst Test = () => {\n    return (\n        <div className={styles.container}>\n           <SuperInputText />\n            <SuperButton>Click me </SuperButton>\n           <SuperCheckbox />\n        </div>\n    );\n}\n\nexport default Test;\n","import {instance} from \"../../../main/dal/instance\";\nimport {PacksParamsType} from \"../bll/packs-reducer\";\n\nexport const packsAPI = {\n    fetchPacks(packsParams: PacksParamsType) {\n        return instance.get<ResponseType>('cards/pack', {params: {...packsParams}});\n    },\n    addPack() {\n        return instance.post('cards/pack', {cardsPack: {name: \"Testik 2\", type: \"pack\"}})\n    },\n    updatePack(_id: string) {\n        return instance.put('cards/pack', {cardsPack: {_id, name: \"Testik 2 changed\"}})\n    },\n    deletePack(id: string) {\n        return instance.delete('cards/pack', {params: {id}})\n    }\n}\n\ntype ResponseType = {\n    cardPacks: Array<PackType>\n    cardPacksTotalCount: number\n    maxCardsCount: number\n    minCardsCount: number\n    page: number\n    pageCount: number\n    token: string\n    tokenDeathTime: number\n}\n\nexport type PackType = {\n    cardsCount: number\n    created: string\n    deckCover: null | string\n    grade: number\n    more_id: string\n    name: string\n    path: string\n    private: boolean\n    rating: number\n    shots: number\n    type: string\n    updated: string\n    user_id: string\n    user_name: string\n    __v: number\n    _id: string\n}\n","import {packsAPI, PackType} from \"../dal/packs-api\";\nimport {AppThunk} from \"../../../main/bll/store\";\n\nexport type PacksParamsType = {\n    packName: string\n    min: number\n    max: number\n    sortPacks: number\n    page: number\n    pageCount: number\n    cardPacksTotalCount: number\n}\n\ntype PacksStateType = {\n    packsList: Array<PackType>\n    packsParams: PacksParamsType\n    error: string | null\n}\nconst initialState: PacksStateType = {\n    packsList : [],\n    packsParams : {\n        packName : \"\",\n        min : 0,\n        max : 50,\n        sortPacks : 0,\n        page : 1,\n        pageCount : 10,\n        cardPacksTotalCount : 0\n    },\n    error : null\n}\n\nexport const packsReducer = (state: PacksStateType = initialState, action: PacksActionsType) => {\n    switch (action.type) {\n        case \"SET_PACKS\":\n            return {...state, packsList : action.packsList}\n        case \"SET_PACKS_SEARCH_TERM\":\n            return {...state, packsParams : {...state.packsParams, packName : action.packName}}\n        case \"SET_CARD_PACKS_TOTAL_COUNT\":\n            return {...state, packsParams : {...state.packsParams, cardPacksTotalCount : action.cardPacksTotalCount}}\n        case 'PACKS/SET_PAGE':\n            return {...state, packsParams : {...state.packsParams, page : action.page}}\n        case \"PACKS/SET_ERROR\": return {...state, error: action.error}\n        default:\n            return state;\n    }\n}\n// Actions\n\nexport const setPacksListAC = (packsList: Array<PackType>): SetPacksListActionType => ({\n    type : \"SET_PACKS\", packsList\n} as const)\nexport const SetPacksSearchTermAC = (packName: string): SetPacksSearchTermActionType => ({\n    type : 'SET_PACKS_SEARCH_TERM',\n    packName\n} as const)\nexport const setCardPacksTotalCountAC = (cardPacksTotalCount: number): SetCardPacksTotalCountActionType => ({\n    type : 'SET_CARD_PACKS_TOTAL_COUNT', cardPacksTotalCount\n} as const)\nexport const setPageAC = (page: number): SetPageActionType => ({\n    type : 'PACKS/SET_PAGE', page\n} as const)\nexport const setPacksErrorAC = (error: null | string): SetPacksErrorActionType => ({\n    type : 'PACKS/SET_ERROR', error\n} as const)\n\n\n// TC\n\nexport const fetchPacksTC = (packsParams: PacksParamsType): AppThunk => (dispatch) => {\n    packsAPI.fetchPacks(packsParams).then((res) => {\n        dispatch(setPacksListAC(res.data.cardPacks))\n        dispatch(setCardPacksTotalCountAC(res.data.cardPacksTotalCount))\n    })\n}\n\nexport const addPackTC = (packsParams: PacksParamsType): AppThunk => (dispatch) => {\n    packsAPI.addPack().then(() => {\n        dispatch(fetchPacksTC(packsParams))\n    })\n}\n\nexport const updatePackTC = (id: string, packsParams: PacksParamsType): AppThunk => (dispatch) => {\n    packsAPI.updatePack(id).then(() => {\n        dispatch(fetchPacksTC(packsParams))\n    })\n}\n\nexport const deletePackTC = (id: string, packsParams: PacksParamsType): AppThunk => (dispatch) => {\n    packsAPI.deletePack(id).then(() => {\n        dispatch(fetchPacksTC(packsParams))\n    })\n}\n\n// Types\nexport type SetPacksSearchTermActionType = {\n    type: 'SET_PACKS_SEARCH_TERM',\n    packName: string\n}\nexport type SetPacksListActionType = {\n    type: 'SET_PACKS',\n    packsList: Array<PackType>\n}\nexport type SetCardPacksTotalCountActionType = {\n    type: 'SET_CARD_PACKS_TOTAL_COUNT',\n    cardPacksTotalCount: number\n}\nexport type SetPageActionType = {\n    type: 'PACKS/SET_PAGE',\n    page: number\n}\nexport type SetPacksErrorActionType = {\n    type: 'PACKS/SET_ERROR',\n    error: string | null\n}\nexport type PacksActionsType =\n    | SetPacksSearchTermActionType\n    | SetPacksListActionType\n    | SetCardPacksTotalCountActionType\n    | SetPageActionType\n    | SetPacksErrorActionType\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../c2-SuperButton/SuperButton\";\nimport style from \"./Search.module.css\"\n\ntype SearchPropsType = {\n    setFilteredResults: (packName: string) => void\n};\n\nconst Search: React.FC<SearchPropsType> = (props) => {\n    const [inputValue, setInputValue] = useState(\"\")\n    const setSearchTerm = () => {\n        props.setFilteredResults(inputValue)\n    }\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.currentTarget.value)\n    }\n\n    return (\n        <div className={style.searchContainer}>\n            <SuperInputText placeholder={\"Type name\"} onChange={onChangeCallback}/>\n            <SuperButton onClick={setSearchTerm}>Search</SuperButton>\n        </div>\n    );\n}\n\nexport default Search;\n","import React, {useState} from \"react\";\nimport s from \"./Paginator.module.css\";\nimport SuperButton from \"../c2-SuperButton/SuperButton\";\n\ntype PaginatorPropsType = {\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (currentPage: number) => void\n    portionSize: number\n}\n\nconst Paginator: React.FC<PaginatorPropsType> = (\n    {\n        totalItemsCount,\n        pageSize ,\n        currentPage,\n        onPageChanged,\n        portionSize,\n        ...restProps\n    }\n\n) => {\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\n    const pages = []\n    for (let i = 1; i <= pagesCount; i ++) {\n        pages.push(i)\n    }\n\n    const portionsCount = Math.ceil(pagesCount / portionSize)\n    const [portionNumber, setPortionNumber] = useState(1)\n    const leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n    const rightPortionNumber = portionNumber * portionSize;\n\n    return (\n        <div className={s.paginationContainer}>\n            {portionNumber > 1 &&\n            <SuperButton onClick={() => {\n                setPortionNumber(portionNumber - 1)\n            }}>Previous</SuperButton>\n            }\n            {\n                pages.filter((p) => p >= leftPortionNumber && p <= rightPortionNumber)\n                    .map((p) => {\n                        return <span className={s.pageNumber + \" \" + (currentPage === p ? s.currentPage : \"\")}\n                            // className={s.pageNumber}\n                                     key={p}\n                                     onClick={(e) => onPageChanged(p)}>{p}</span>\n                    })\n            }\n            {portionNumber < portionsCount &&\n            <SuperButton onClick={() => {\n                setPortionNumber(portionNumber + 1)\n            }}>Next</SuperButton>}\n        </div>\n    );\n}\n\nexport default Paginator;\n","import React from \"react\";\nimport {PackType} from \"../dal/packs-api\";\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"../../../main/ui/Routes\";\nimport style from \"./Pack.module.css\"\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\n\ntype PackPropsType = {\n    pack: PackType\n    updatePack: (id: string) => void\n    deletePack: (id: string) => void\n}\n\nconst Pack: React.FC<PackPropsType> = (props) => {\n    const onUpdateClick = () => {\n        props.updatePack(props.pack._id)\n    }\n    const onDeleteClick = () => {\n        props.deletePack(props.pack._id)\n    }\n    const id = props.pack._id\n    return (\n        <>\n            <tr className={style.packItem}>\n                <td>{props.pack.name}</td>\n                <td>{props.pack.cardsCount}</td>\n                <td>{props.pack.updated}</td>\n                <SuperButton onClick={onUpdateClick}>update</SuperButton>\n                <SuperButton onClick={onDeleteClick}>delete</SuperButton>\n                <td><NavLink\n                    to={`${PATH.CARDS}/${id}`}\n                >cards</NavLink></td>\n                <td><NavLink\n                    to={`${PATH.LEARNING}/${props.pack._id}`}\n                >learn</NavLink></td>\n            </tr>\n\n        </>\n    );\n}\n\nexport default Pack;\n","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../main/bll/store\";\nimport {\n    addPackTC,\n    deletePackTC,\n    fetchPacksTC, PacksParamsType,\n    SetPacksSearchTermAC,\n    setPageAC,\n    updatePackTC\n} from \"../bll/packs-reducer\";\nimport {PackType} from \"../dal/packs-api\";\nimport style from \"./Packs.module.css\";\nimport Search from \"../../../main/ui/common/c5-Search/Search\";\nimport Paginator from \"../../../main/ui/common/c4-Paginator/Paginator\";\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\nimport Pack from \"../pack/Pack\";\n\nconst Packs = () => {\n    const dispatch = useDispatch()\n    const packsParams = useSelector<AppRootStateType, PacksParamsType>((state) => state.packs.packsParams)\n    const packs = useSelector<AppRootStateType, Array<PackType>>((state) => state.packs.packsList)\n\n    useEffect(() => {\n        dispatch(fetchPacksTC(packsParams))\n    }, [packsParams.packName, packsParams.page])\n\n    const setFilteredResults = (packName: string) => {\n        dispatch(SetPacksSearchTermAC(packName))\n    }\n    const setPage = (page: number) => {\n        dispatch(setPageAC(page))\n    }\n\n    const addPack = () => {\n        dispatch(addPackTC(packsParams))\n    }\n    const updatePack = (id: string) => {\n        dispatch(updatePackTC(id, packsParams))\n    }\n    const deletePack = (id: string) => {\n        dispatch(deletePackTC(id, packsParams))\n    }\n\n    return (\n        <div className={style.packsContainer}>\n            <h2>Packs</h2>\n            <div className={style.filtersContainer}>\n                <Search setFilteredResults={setFilteredResults}/>\n                <Paginator totalItemsCount={packsParams.cardPacksTotalCount}\n                           pageSize={packsParams.pageCount}\n                           currentPage={packsParams.page}\n                           onPageChanged={setPage}\n                           portionSize={10}\n                />\n            </div>\n            <table className={style.tableContainer}>\n                <tr className={style.tableHeaders}>\n                    <td>Name</td>\n                    <td>Cards Count</td>\n                    <td>Updated</td>\n                    <SuperButton onClick={addPack} className={style.addButton}>ADD</SuperButton>\n                </tr>\n                {packs.map((p) => {\n                    return <Pack key={p._id}\n                                 pack={p}\n                                 updatePack={updatePack}\n                                 deletePack={deletePack}\n                    />\n                })}\n            </table>\n        </div>\n    );\n}\n\nexport default Packs;\n","import {instance} from \"../../../main/dal/instance\";\nimport {CardsParamsType} from \"../bll/cards-reducer\";\n\nexport const cardsAPI = {\n    fetchCards(cardsParams: CardsParamsType) {\n        return instance.get<ResponseType>('cards/card', {params: {...cardsParams}})\n    },\n    addCard(card: CardType) {\n        return instance.post('cards/card', {card})\n    },\n    updateCard(_id: string, question: string, comments: string) {\n        return instance.put('cards/card', {card: {_id, question, comments}})\n    },\n    deleteCard(id: string) {\n        return instance.delete('cards/card', {params: {id}})\n    }\n}\n\nexport type CardType = {\n    answer: string\n    question: string\n    cardsPack_id: string\n    grade: number\n    rating: number\n    shots: number\n    type: string\n    user_id: string\n    created: string\n    updated: string\n    _v: number\n    _id: string\n}\n\ntype ResponseType = {\n    cards: Array<CardType>\n    cardsTotalCount: number\n    maxGrade: number\n    minGrade: number\n    page: number\n    pageCount: number\n    packUserId: string\n}\n","import {cardsAPI, CardType} from \"../dal/cards-api\";\nimport {AppThunk} from \"../../../main/bll/store\";\n\nexport type CardsParamsType = {\n    minGrade: number\n    maxGrade: number\n    page: number\n    pageCount: number\n    cardsTotalCount: number\n    cardAnswer: string\n    cardQuestion: string\n    cardsPack_id: string\n    sortCards: number\n}\n\ntype CardsStateType = {\n    cardsList: Array<CardType>\n    cardsParams: CardsParamsType\n    error: string | null\n}\nconst initialState: CardsStateType = {\n    cardsList : [],\n    cardsParams : {\n        minGrade : 0,\n        maxGrade : 100,\n        page : 1,\n        pageCount : 10,\n        cardsTotalCount : 0,\n        cardAnswer : \"\",\n        cardQuestion : \"\",\n        cardsPack_id : \"\",\n        sortCards : 0\n    },\n    error : null\n}\n\nexport const cardsReducer = (state: CardsStateType = initialState, action: CardsActionsType) => {\n    switch (action.type) {\n        case \"SET_CARDS\":\n            return {...state, cardsList : action.cardsList}\n        case \"SET_CARD_TOTAL_COUNT\":\n            return {...state, cardsParams : {...state.cardsParams, cardsTotalCount : action.cardsTotalCount}}\n        case \"CARDS/SET_PAGE\":\n            return {...state, cardsParams : {...state.cardsParams, page : action.page}}\n        case \"CARDS/SET_PACK_ID\":\n            return {...state, cardsParams : {...state.cardsParams, cardsPack_id : action.id}}\n        case \"CARDS/SET_ERROR\": return {...state, error: action.error}\n        default:\n            return state;\n    }\n}\n// Actions\n\nexport const setCardsListAC = (cardsList: Array<CardType>): SetCardsListActionType => ({\n    type : \"SET_CARDS\", cardsList\n} as const)\n\nexport const setCardsTotalCountAC = (cardsTotalCount: number): SetCardSTotalCountActionType => ({\n    type : 'SET_CARD_TOTAL_COUNT', cardsTotalCount\n} as const)\n\nexport const setCardsPageAC = (page: number): SetCardsPageActionType => ({\n    type : 'CARDS/SET_PAGE', page\n} as const)\n\nexport const setPackIdAC = (id: string): SetPackIdActionType => ({\n    type : 'CARDS/SET_PACK_ID', id\n} as const)\n\nexport const setCardsErrorAC = (error: null | string): SetCardsErrorActionType => ({\n    type : 'CARDS/SET_ERROR', error\n} as const)\n\n//Thunk\n\nexport const fetchCardsTC = (cardsParams: CardsParamsType): AppThunk => (dispatch) => {\n    cardsAPI.fetchCards(cardsParams).then((res) => {\n        dispatch(setCardsListAC(res.data.cards))\n        dispatch(setCardsTotalCountAC(res.data.cardsTotalCount))\n    }).catch((error) => {\n        dispatch(setCardsErrorAC(error.response.data.error))\n    })\n}\nexport const addCardTC = (card: CardType, cardsParams: CardsParamsType): AppThunk => (dispatch) => {\n    cardsAPI.addCard(card).then(() => {\n        dispatch(fetchCardsTC(cardsParams))\n    }).catch((error) => {\n        dispatch(setCardsErrorAC(error.response.data.error))\n    })\n}\nexport const updateCardTC = (_id: string, question: string, comments: string, cardsParams: CardsParamsType): AppThunk => (dispatch) => {\n    cardsAPI.updateCard(_id, question, comments).then(() => {\n        dispatch(fetchCardsTC(cardsParams))\n    }).catch((error) => {\n        dispatch(setCardsErrorAC(error.response.data.error))\n    })\n}\nexport const deleteCardTC = (id: string, cardsParams: CardsParamsType): AppThunk => (dispatch) => {\n    cardsAPI.deleteCard(id).then(() => {\n        dispatch(fetchCardsTC(cardsParams))\n    }).catch((error) => {\n        dispatch(setCardsErrorAC(error.response.data.error))\n    })\n}\n\nexport type SetCardsListActionType = {\n    type: 'SET_CARDS',\n    cardsList: Array<CardType>\n}\nexport type SetCardSTotalCountActionType = {\n    type: 'SET_CARD_TOTAL_COUNT'\n    cardsTotalCount: number\n}\nexport type SetCardsPageActionType = {\n    type: 'CARDS/SET_PAGE'\n    page: number\n}\n\nexport type SetPackIdActionType = {\n    type: 'CARDS/SET_PACK_ID',\n    id: string\n}\n\nexport type SetCardsErrorActionType = {\n    type: 'CARDS/SET_ERROR',\n    error: string | null\n}\n\nexport type CardsActionsType =\n    | SetCardsListActionType\n    | SetCardSTotalCountActionType\n    | SetCardsPageActionType\n    | SetPackIdActionType\n    | SetCardsErrorActionType\n\n\n","import React from \"react\";\nimport {CardType} from \"../../dal/cards-api\";\nimport SuperButton from \"../../../../main/ui/common/c2-SuperButton/SuperButton\";\nimport style from \"./Card.module.css\"\n\ntype CardPropsType = {\n    card: CardType\n    packId: string\n    updateCard: (_id: string) => void\n    deleteCard: (id: string) => void\n}\n\nconst Card: React.FC<CardPropsType> = (props) => {\n    const updateCard = () => {\n        props.updateCard(props.card._id)\n    }\n\n    const deleteCard = () => {\n        props.deleteCard(props.card._id)\n    }\n\n    return (\n        <>\n            <tr className={style.cardContainer}>\n                <td>{props.card.question}</td>\n                <td>{props.card.answer}</td>\n                <td>{props.card.grade}</td>\n                <td>{props.card.updated}</td>\n                <SuperButton onClick={updateCard}>update</SuperButton>\n                <SuperButton onClick={deleteCard}>delete</SuperButton>\n            </tr>\n\n        </>\n    );\n}\n\nexport default Card;\n","import React, {useEffect} from \"react\";\nimport style from \"./Cards.module.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../main/bll/store\";\nimport {CardType} from \"../dal/cards-api\";\nimport {\n    addCardTC,\n    CardsParamsType,\n    deleteCardTC,\n    fetchCardsTC,\n    setCardsPageAC, setPackIdAC,\n    updateCardTC\n} from \"../bll/cards-reducer\";\nimport Card from \"./Card/Card\";\nimport {useParams} from \"react-router-dom\";\nimport Paginator from \"../../../main/ui/common/c4-Paginator/Paginator\";\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\n\ntype RoutesParamType = {\n    id: string\n}\nconst Cards = () => {\n    const dispatch = useDispatch()\n    const cardsParams = useSelector<AppRootStateType, CardsParamsType>((state) => state.cards.cardsParams)\n    const cards = useSelector<AppRootStateType, Array<CardType>>((state) => state.cards.cardsList)\n\n    let {id} = useParams<RoutesParamType>()\n\n    useEffect(() => {\n        dispatch(setPackIdAC(id))\n        dispatch(fetchCardsTC(cardsParams))\n    }, [cardsParams.cardAnswer, cardsParams.cardQuestion, cardsParams.page, cardsParams.cardsPack_id])\n\n    const setPage = (page: number) => {\n        dispatch(setCardsPageAC(page))\n    }\n    const addCard = () => {\n        let card = {\n            answer : \"this is the answer\",\n            question : \"this is the question,\",\n            cardsPack_id : id,\n            grade : 3,\n            rating : 6,\n            shots : 2,\n            type : \"card\",\n            user_id : \"\",\n            created : \"\",\n            updated : \"\",\n            _v : 0,\n            _id : \"\"\n        }\n        dispatch(addCardTC(card, cardsParams))\n    }\n\n    const updateCard = (_id: string) => {\n        dispatch(updateCardTC(_id, \"new question\", \"new comments\", cardsParams))\n    }\n\n    const deleteCard = (_id: string) => {\n        dispatch(deleteCardTC(_id, cardsParams))\n    }\n\n    return (\n        <div className={style.cardsContainer}>\n            <h2>Cards</h2>\n            <div className={style.paginator}>\n                <Paginator totalItemsCount={cardsParams.cardsTotalCount}\n                           pageSize={cardsParams.pageCount}\n                           currentPage={cardsParams.page}\n                           onPageChanged={setPage}\n                           portionSize={10}\n                />\n            </div>\n            <div className={style.filtersContainer}>\n            </div>\n            <table className={style.tableContainer}>\n                <tr className={style.tableHeaders}>\n                    <td>Question</td>\n                    <td>Answer</td>\n                    <td>Grade</td>\n                    <td>Updated</td>\n                    <SuperButton onClick={addCard}>Add</SuperButton>\n                </tr>\n                {cards.map((c) => {\n                    return <Card key={c._id}\n                                 card={c}\n                                 packId={c.cardsPack_id}\n                                 updateCard={updateCard}\n                                 deleteCard={deleteCard}\n\n                    />\n                })}\n            </table>\n        </div>\n    );\n}\n\nexport default Cards;\n","import React, {ChangeEvent} from \"react\";\nimport SuperInputText from \"../../../../main/ui/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../../../main/ui/common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../../../main/ui/common/c3-SuperCheckbox/SuperCheckbox\";\nimport s from './Login.module.css'\n\ntype LoginType = {\n    onChangeHandlerEmail: (e: ChangeEvent<HTMLInputElement>) => void\n    onChangeHandlerPassword: (e: ChangeEvent<HTMLInputElement>) => void\n    onChangeHandlerRememberMe: (e: ChangeEvent<HTMLInputElement>) => void\n    onClickHandler:()=>void\n    error:string|null\n}\n\nfunction Login(props: LoginType) {\n    return (\n        <div className={s.formContainer}>\n            <div>SIGN IN</div>\n            <SuperInputText type={'email'} placeholder={'Enter email'} onChange={props.onChangeHandlerEmail}/>\n            <div><SuperInputText type={'password'} placeholder={'Password'} onChange={props.onChangeHandlerPassword}/>\n            </div>\n            <div><SuperCheckbox onChange={props.onChangeHandlerRememberMe}>Remember Me</SuperCheckbox></div>\n            {props.error&&<span className={s.error}>{props.error}</span>}\n            <div><SuperButton onClick={props.onClickHandler}>Sign In</SuperButton></div>\n        </div>\n\n    );\n}\n\nexport default Login;\n\n","import {instance} from \"../../../../main/dal/instance\";\n\nexport const loginAPI = {\n    login(email: string, password: string, rememberMe: boolean) {\n        const promise= instance.post(`auth/login`, {email, password, rememberMe})\n        return promise\n    },\n    logout() {\n        return instance.delete('auth/me')\n    }\n}\n","import {loginAPI} from \"../dal/login-api\";\nimport {AppThunk} from \"../../../../main/bll/store\";\n\nexport const SET_IS_LOGIN = 'SET-IS-LOGIN';\nexport const SET_ERROR = \"SET_ERROR\";\n\nexport type ActionsLoginType = ReturnType<typeof setLoginAC> | ReturnType<typeof setError>\ntype LoginStateType = {\n    user: UserType | {}\n    isLogin: boolean\n    error: string | null\n}\nexport type UserType = {\n    _id: string;\n    email: string;\n    name: string;\n    avatar?: string;\n    publicCardPacksCount: number; // количество колод\n    created: Date;\n    updated: Date;\n    isAdmin: boolean;\n    verified: boolean; // подтвердил ли почту\n    rememberMe: boolean;\n    error?: string;\n}\nconst initialState: LoginStateType = {\n    user: {},\n    isLogin: false,\n    error: null\n}\n\nexport const authReducer = (state: LoginStateType = initialState, action: ActionsLoginType): LoginStateType => {\n    switch (action.type) {\n        case \"SET_IS_LOGIN\":\n            return {\n                ...state,\n                ...action.payload\n            };\n        case \"SET_ERROR\": {\n            return {...state, error: action.error}\n        }\n        default:\n            return state\n    }\n}\nexport const setLoginAC = (payload: LoginStateType) => ({\n    type: 'SET_IS_LOGIN',\n    payload\n} as const)\nexport const setError = (error: string | null) => ({\n    type: \"SET_ERROR\",\n    error\n\n} as const)\n\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunk =>\n    (dispatch) => {\n        loginAPI.login(email, password, rememberMe)\n            .then((response) => {\n                dispatch(setLoginAC({user: response.data, isLogin: true, error: null}))\n            })\n            .catch((e) => {\n                const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\n                dispatch(setError(error))\n            })\n\n    }\nexport const logout = (): AppThunk =>\n    (dispatch) => {\n        loginAPI.logout()\n            .then(response => {\n                dispatch(setLoginAC({user: {}, isLogin: false, error: null}))\n                alert(response.data.info)\n\n            })\n            .catch((e) => {\n                const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\n                alert(error)\n                dispatch(setError(error))\n            })\n\n    }\n\n\n\n\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\nimport Login from \"./Login\";\nimport {AppRootStateType} from \"../../../../main/bll/store\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {login} from \"../bll/auth-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {PATH} from \"../../../../main/ui/Routes\";\nimport s from './Login.module.css'\nimport {Logout} from \"./logaut/Logout\";\n\ntype LoginContainerType = {}\n\nfunction LoginContainer() {\n    const dispatch = useDispatch()\n\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\n    const isLogin = useSelector<AppRootStateType, boolean>((state) => state.login.isLogin)\n    const error = useSelector<AppRootStateType, string | null>((state) => state.login.error)\n    let onChangeHandlerEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n    }, [setEmail])\n    let onChangeHandlerPassword = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.currentTarget.value)\n    }, [setPassword])\n    let onChangeHandlerRememberMe = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setRememberMe(e.currentTarget.checked)\n    }, [setRememberMe])\n    let onClickHandler = () => {\n        dispatch(login(email, password, rememberMe))\n    }\n\n    if (isLogin) {\n        return <Redirect to={PATH.PROFILE}/>\n    }\n\n    return (\n        <div>\n            <Login\n                onChangeHandlerEmail={onChangeHandlerEmail}\n                onChangeHandlerPassword={onChangeHandlerPassword}\n                onChangeHandlerRememberMe={onChangeHandlerRememberMe}\n                onClickHandler={onClickHandler}\n                error={error}\n            />\n            <span>\n                <NavLink className={s.text} to={PATH.REGISTRATION}>Registration</NavLink>\n                <NavLink className={s.text} to={PATH.RESET_PASSWORD}>   Forget password</NavLink>\n            </span>\n        </div>\n    )\n        ;\n}\n\nexport default LoginContainer;\n\n","import {instance} from \"../../../../main/dal/instance\";\n\nexport const registrationAPI = {\n    registerUser(email: string, password: string) {\n        const promise = instance.post('auth/register', {email, password});\n        return promise;\n    }\n}\n","import {Dispatch} from \"react\";\nimport {registrationAPI} from \"../dal/registration-api\";\nimport {AppRootStateType} from \"../../../../main/bll/store\";\n\ntype RegistrationStateType = {\n    isRegistered: boolean,\n    error: string | null\n}\nconst initialState: RegistrationStateType = {\n    isRegistered: false,\n    error: null\n}\n\nexport const registrationReducer = (state: RegistrationStateType = initialState, action: ActionsType): RegistrationStateType => {\n    switch (action.type) {\n        case \"TOGGLE_IS_REGISTERED\": {\n            return {...state, ...action.payload}\n        }\n        case \"SET_ERROR\":{\n            return {...state, ...action.payload}\n        }\n        default:\n            return state;\n    }\n}\n\nexport const ToggleIsRegisteredAC = (isRegistered: boolean) => ({\n    type: \"TOGGLE_IS_REGISTERED\",\n    payload: {\n        isRegistered\n    }\n} as const)\n\nexport const SetErrorAC = (error: string | null) => ({\n    type: \"SET_ERROR\",\n    payload: {\n        error\n    }\n} as const)\n\n\nexport const RegisterUserTC = (email: string, password: string) => (dispatch: ThunkDispatch,  getState: () => AppRootStateType) => {\n    registrationAPI.registerUser(email, password)\n        .then((res) => {\n            dispatch(ToggleIsRegisteredAC(true))\n        }).catch((error) => {\n            dispatch(SetErrorAC(error.response.data.error))\n    })\n}\n\ntype ActionsType =\n    | ReturnType<typeof ToggleIsRegisteredAC>\n    | ReturnType<typeof SetErrorAC>\n\ntype ThunkDispatch = Dispatch<ActionsType>\n","import React from \"react\";\nimport SuperInputText from \"../../../../main/ui/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../../../main/ui/common/c2-SuperButton/SuperButton\";\nimport styles from \"./Registration.module.css\"\n\ntype RegistrationType = {\n    onEmailChange: (value: string) => void\n    onPasswordChange: (value: string) => void\n    registerUser: () => void\n    error: string | null\n}\n\nexport const Registration = (props: RegistrationType) => {\n\n    return (\n        <div className={styles.formContainer}>\n            Registration\n            <SuperInputText onChangeText={props.onEmailChange} type={\"email\"}/>\n            <SuperInputText onChangeText={props.onPasswordChange} type={\"password\"}/>\n            {props.error && <span className={styles.error}>{props.error}</span>}\n            <SuperButton onClick={props.registerUser}>Register</SuperButton>\n        </div>\n    );\n}\n\nexport default Registration;\n\n","import React, {useState} from \"react\";\nimport {RegisterUserTC} from \"../bll/registration-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../../main/bll/store\";\nimport { Redirect } from \"react-router-dom\";\nimport Registration from \"./Registration\";\n\nexport const RegistrationContainer = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const dispatch = useDispatch()\n    const isRegistered = useSelector<AppRootStateType, boolean>((state) => state.registration.isRegistered)\n    const error = useSelector<AppRootStateType, string | null>((state) => state.registration.error)\n\n    const onEmailChange = (value: string) =>  {\n        setEmail(value)\n    }\n    const onPasswordChange = (value: string) => {\n        setPassword(value)\n    }\n    const registerUser = () => {\n        dispatch(RegisterUserTC(email, password))\n    }\n\n    if (isRegistered) {\n        return <Redirect to={'/login'}/>\n    }\n\n    return (\n        <div>\n            <Registration onEmailChange={onEmailChange}\n                          onPasswordChange={onPasswordChange}\n                          registerUser={registerUser}\n                          error={error}\n            />\n        </div>\n\n    );\n}\n\nexport default RegistrationContainer;\n\n","import React from \"react\";\nimport {CardType} from \"../../cards/dal/cards-api\";\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\n\ntype LearnCardType = {\n    card: CardType\n    checked: boolean\n    setIsChecked: (value: boolean) => void\n\n}\nexport const LearnCard: React.FC<LearnCardType> = (props) => {\n    return (\n        <div>\n            <h4>Question</h4>\n            <h3>{props.card.question}</h3>\n            <span>id:{props.card._id}</span>\n            <div>\n                {!props.checked && <SuperButton onClick={(e) =>\n                    props.setIsChecked(true)}\n                >Check</SuperButton>}\n            </div>\n            <div>\n                {props.checked && (\n                    <div>\n                        <h3>Answer:{props.card.answer}</h3>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from \"react\";\nimport {LearnCard} from \"../LearnCard/LearnCard\";\nimport {CardType} from \"../../cards/dal/cards-api\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../main/bll/store\";\n\ntype LearningPageType = {}\n\nexport const LearningPage: React.FC<LearningPageType> = () => {\n    const cards = useSelector<AppRootStateType, CardType[]>(state => state.cards.cardsList)\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isLogin)\n\n    const [card, setCard] = useState<CardType>({\n        _id: ''\n    } as CardType)\n    const [checked, setIsChecked] = useState<boolean>(false)\n\n    return (\n        <div>\n            <LearnCard card={card} checked={checked} setIsChecked={setIsChecked}/>\n        </div>\n    )\n}","import React from \"react\";\nimport style from './Modal.module.css';\n\ntype ModalPropsType = {\n    closeModalWindow?: () => void\n    isShown: boolean\n    scrollUp?: () => void\n    showBackground: boolean\n    width: number\n    height: number\n    top: number\n    left: number\n    position: \"static\" | \"relative\" | \"absolute\" | \"sticky\" | \"fixed\"\n};\n\nconst Modal: React.FC<ModalPropsType> = (\n    {\n        isShown,\n        height,\n        width,\n        showBackground,\n        closeModalWindow,\n        scrollUp, top, left, position,\n        children\n    }) => {\n\n    return (\n        <div>\n            {isShown && <div className={style.modal} style={{width, height, position, top: `${top}%`, left: `${left}%`}}>\n                <div className={style.children} onClick={scrollUp}>{children}</div>\n            </div>}\n            {isShown && showBackground &&\n            <div className={style.overlay} onClick={closeModalWindow}></div>}\n        </div>\n    );\n}\n\nexport default Modal;\n","import React, {useState} from \"react\";\nimport SuperButton from \"../c2-SuperButton/SuperButton\";\nimport Modal from \"./Modal/Modal\";\n\nconst ModalContainer: React.FC = () => {\n    const [isShown, setIsShown] = useState(false)\n    const closeModalWindow = () => {\n        setIsShown(false)\n    }\n\n    return (\n        <>\n            <SuperButton onClick={() => {\n                setIsShown(true)\n            }}>Modal 1</SuperButton>\n            <Modal closeModalWindow={closeModalWindow}\n                   isShown={isShown}\n                   showBackground={true}\n                   width={600}\n                   height={400}\n                   top={50}\n                   left={50}\n                   position={\"absolute\"}\n            >\n                <h3>Modal 1</h3>\n                <SuperButton onClick={closeModalWindow}>Close</SuperButton>\n            </Modal>\n        </>\n    );\n}\n\nexport default ModalContainer;\n","import React, {useState} from \"react\";\nimport SuperButton from \"../c2-SuperButton/SuperButton\";\nimport Modal from \"./Modal/Modal\";\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\n\nconst ModalContainerWithInput: React.FC = () => {\n    const [isShown, setIsShown] = useState(false)\n    const closeModalWindow = () => {\n        setIsShown(false)\n    }\n\n    return (\n        <>\n            <SuperButton onClick={() => {\n                setIsShown(true)\n            }}>Modal 2</SuperButton>\n            <Modal closeModalWindow={closeModalWindow}\n                   isShown={isShown}\n                   showBackground={true}\n                   width={600}\n                   height={400}\n                   top={50}\n                   left={50}\n                   position={\"absolute\"}\n            >\n                <h3>Modal 2</h3>\n                <SuperInputText/>\n                <SuperInputText/>\n                <SuperInputText/>\n                <SuperButton onClick={closeModalWindow}>Close</SuperButton>\n            </Modal>\n        </>\n    );\n}\n\nexport default ModalContainerWithInput;\n","import React, {useEffect, useState} from \"react\";\nimport Modal from \"./Modal\";\n\nconst ModalUp: React.FC = () => {\n    const [isShown, setIsShown] = useState(false)\n\n    const toggleIsShown = () => {\n        if (window.pageYOffset > 300) {\n            setIsShown(true);\n        } else {\n            setIsShown(false);\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", toggleIsShown);\n    }, []);\n\n    const scrollUp = () => {\n        window.scrollTo({\n            top : 0,\n            behavior : \"smooth\"\n        });\n    }\n    return (\n        <>\n\n            <Modal scrollUp={scrollUp}\n                   isShown={isShown}\n                   showBackground={false}\n                   width={100}\n                   height={70}\n                   top={85}\n                   left={10}\n                   position={\"fixed\"}\n            >\n                <span style={{cursor : \"pointer\"}}>UP</span>\n            </Modal>\n        </>\n    );\n}\n\nexport default ModalUp;\n","import React from \"react\";\nimport ModalContainer from \"./ModalContainer\";\nimport ModalContainerWithInput from \"./ModalContainerWithInput\";\nimport ModalUp from \"./Modal/ModalUp\";\n\nconst ModalsPage = () => {\n    return (\n        <div>\n            <div style={{marginTop: \"300px\"}}>\n                <ModalContainer/>\n                <ModalContainerWithInput />\n            </div>\n            <ModalUp/>\n            <div style={{marginTop: \"5000px\"}}>bottom</div>\n        </div>\n    )\n}\n\nexport default ModalsPage\n","import React from \"react\";\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport styles from './Routes.module.css'\nimport Error404 from \"./Header/error404/Error404\";\nimport Profile from \"../../features/profile/ui/Profile\";\nimport ResetPassword from \"../../features/reset-password/ui/ResetPassword\";\nimport NewPassword from \"../../features/new-password/ui/NewPassword\";\nimport Test from \"../../features/test/ui/Test\";\nimport Packs from \"../../features/packs/ui/Packs\";\nimport Cards from \"../../features/cards/ui/Cards\";\nimport LoginContainer from \"../../features/auth/login/ui/LoginContainer\";\nimport RegistrationContainer from \"../../features/auth/registration/ui/RegistrationContainer\";\nimport {LearningPage} from \"../../features/learning/ui/LearnPage\";\nimport ModalsPage from \"./common/c6-Modal/ModalsPage\";\n\nexport const PATH = {\n    LOGIN: \"/login\",\n    REGISTRATION: \"/registration\",\n    PROFILE: \"/profile\",\n    RESET_PASSWORD: \"/reset-password\",\n    NEW_PASSWORD: \"/new-password\",\n    TEST: \"/test\",\n    PACKS: \"/packs\",\n    CARDS: \"/cards\",\n    LEARNING: \"/learning\",\n    MODALS: \"/modals\"\n}\n\nfunction Routes() {\n    return (\n        <div className={styles.mainContainer}>\n            <Switch>\n\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\n\n                <Route path={PATH.LOGIN} render={() => <LoginContainer/>}/>\n                <Route path={PATH.REGISTRATION} render={() => <RegistrationContainer/>}/>\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\n                <Route path={PATH.RESET_PASSWORD} render={() => <ResetPassword/>}/>\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\n                <Route path={`${PATH.CARDS}/:id`} render={() => <Cards/>}/>\n                <Route path={PATH.LEARNING} render={() => <LearningPage/>}/>\n                <Route path={PATH.TEST} render={() => <Test/>}/>\n                <Route path={PATH.MODALS} render={() => <ModalsPage />}/>\n\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {logout} from \"../../bll/auth-reducer\";\n\nexport const Logout = () => {\n    let dispatch = useDispatch()\n    const onClickHandler = () => {\n        dispatch(logout())\n    }\n    return (\n        <div onClick={onClickHandler}>\n            Logout\n        </div>\n    )\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport classes from './Navbar.module.css'\nimport {PATH} from \"../../Routes\";\nimport {Logout} from \"../../../../features/auth/login/ui/logaut/Logout\";\n\ntype NavbarType = {\n    isCollapsed: boolean\n    setCollapsed: (isCollapsed: boolean) => void\n}\n\nfunction Navbar(props: NavbarType) {\n\n    const onClickItem = () => {\n        props.setCollapsed(true)\n    }\n//nya-admin@nya.nya1qazxcvBG\n    return (\n        <div className={props.isCollapsed ? classes.hidden : classes.menuContainer}>\n            <ul>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.LOGIN}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Login</NavLink>\n\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.REGISTRATION}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Registration</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.PROFILE}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Profile</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.RESET_PASSWORD}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Reset Password</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.NEW_PASSWORD}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>New Password</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.PACKS}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Packs</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.TEST}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Test</NavLink>\n                </li>\n                <li><NavLink to={PATH.LOGIN}><Logout/></NavLink></li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.MODALS}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Modals</NavLink>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React, {useState} from \"react\";\nimport classes from './Header.module.css'\nimport Navbar from \"./Navbar/Navbar\";\n\nfunction Header() {\n\n    const [isCollapsed, setCollapsed] = useState<boolean>(true)\n    const toggleMenu = () => {\n        setCollapsed(!isCollapsed)\n    }\n    return (\n        <div className={classes.menuContainer}>\n            <div className={classes.navbarContainer}>\n                <img onClick={toggleMenu}\n                     className={classes.menuIcon}\n                     src=\"https://upload.wikimedia.org/wikipedia/commons/b/b2/Hamburger_icon.svg\"\n                     alt=\"menu\"/>\n            </div>\n            <Navbar isCollapsed={isCollapsed} setCollapsed={setCollapsed}/>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Header from \"./Header/Header\";\nimport Routes from './Routes';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HashRouter>\n            <Header />\n                <Routes />\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type ProfileActionType = {\n   type: string\n}\n\ntype ActionsType = ProfileActionType\ntype ProfileStateType = {\n}\nconst initialState: ProfileStateType = {}\n\nexport const profileReducer = (state: ProfileStateType = initialState, action: ActionsType): ProfileStateType => {\n    switch (action.type) {\n\n        default:\n            return state;\n    }\n}\n","export type TestActionType = {\n   type: string\n}\n\ntype ActionsType = TestActionType\ntype TestStateType = {\n}\nconst initialState: TestStateType = {}\n\nexport const testReducer = (state: TestStateType = initialState, action: ActionsType): TestStateType => {\n    switch (action.type) {\n\n        default:\n            return state;\n    }\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport {ActionsLoginType, authReducer} from \"../../features/auth/login/bll/auth-reducer\";\nimport {newPasswordReducer} from \"../../features/new-password/bll/new-password-reducer\";\nimport {profileReducer} from \"../../features/profile/bll/profile-reducer\";\nimport {resetPasswordReducer} from \"../../features/reset-password/bll/reset-password-reducer\";\nimport {testReducer} from \"../../features/test/bll/test-reducer\";\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport {\n        PacksActionsType,\n        packsReducer\n} from \"../../features/packs/bll/packs-reducer\";\nimport {CardsActionsType, cardsReducer} from \"../../features/cards/bll/cards-reducer\";\nimport {registrationReducer} from \"../../features/auth/registration/bll/registration-reducer\";\n\nconst rootReducer = combineReducers({\n        login: authReducer,\n        registration: registrationReducer,\n        newPassword: newPasswordReducer,\n        profile: profileReducer,\n        resetPassword: resetPasswordReducer,\n        test: testReducer,\n        packs: packsReducer,\n        cards: cardsReducer\n})\n\nexport const store = createStore(rootReducer,applyMiddleware(thunkMiddleware));\ntype AppActionType = ActionsLoginType | PacksActionsType | CardsActionsType\nexport type AppRootStateType = ReturnType<typeof rootReducer>\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionType>\n\n// @ts-ignore\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./main/bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}